{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "lime",
			"type": "lime",
			"command": "test",
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"label": "Precompile Steps",
			"type": "shell",
			"command": "bash ./bin/precompile.sh",
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"presentation": {
				"reveal": "always",
				"panel": "shared"
			}
		},
		{
			"label": "Art + html5 debug",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Precompile Steps",
				"lime: build html5 -debug"
			]
		},
				{
			"label": "Art + html5",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Precompile Steps",
				"lime: build html5"
			]
		},
		{
			// XXX: A workaround to allow us to run the test server once, but allow art regen and the debug build
			//  to be restarted while working on the project. VSCode seems to just ignore the first task if it is
			//  already running, but still kicks off the second task to regen our art files and rebuild the game
			"label": "custom build and test",
			"dependsOrder": "parallel",
			"dependsOn": [
				"lime: test html5 -debug -nolaunch",
				"Art + html5 debug"
			]
		},
		{
			// XXX: A workaround to allow us to run the test server once, but allow art regen and the debug build
			//  to be restarted while working on the project. VSCode seems to just ignore the first task if it is
			//  already running, but still kicks off the second task to regen our art files and rebuild the game
			"label": "custom build and run",
			"dependsOrder": "parallel",
			"dependsOn": [
				"lime: test html5 -nolaunch",
				"Art + html5"
			]
		}
	]
}
